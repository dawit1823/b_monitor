
//build.gradle (app level)

plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

//def keystoreProperties = new Properties()
//def keystorePropertiesFile = rootProject.file('key.properties')
//if (keystorePropertiesFile.exists()) {
//    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
//}

android {
    namespace "com.benaber.r_and_e_monitor"

    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    

    defaultConfig {
        applicationId "com.benaber.r_and_e_monitor"
        minSdkVersion 23 // Increase this to 23 or higher if required
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:deprecation"
}

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    

//    signingConfigs {
//        release {
//            keyAlias = keystoreProperties['keyAlias']
//            keyPassword = keystoreProperties['keyPassword']
//            storeFile = keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
//            storePassword = keystoreProperties['storePassword']
//        }
//    }
    buildTypes {
        release {
            /// TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now,
            // so flutter run --release works.
            signingConfig = signingConfigs.debug
            //signingConfig = signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.22"
}

